// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    id  String @unique @id @default(cuid())
    username String @unique 
    password String 
    avatarId String 
    role Role
    avatar Avatar? @relation(fields:[avatarId],references:[id])
}

model Space{
    id String @unique @id @default(cuid())
    name String
    thumbnail String
    width Int 
    height Int
    elements SpaceElements[]
}

model SpaceElements{
    id String @id @unique @default(cuid())
    spaceId String
    elementId String
    x Int
    y Int
    space Space @relation(fields:[spaceId],references:[id])
    element Elements @relation(fields:[elementId],references:[id])
}

model Elements{
    id String @id @unique @default(cuid())
    width Int
    height Int 
    imageUrl String
    spaces SpaceElements[]
    mapElements MapElements[]
}

model Map{
    id String @id @unique @default(cuid())
    width Int
    height Int 
    name String
    mapElements MapElements[]
}

model  MapElements{
    id String @id @unique @default(cuid())
    elementId String
    mapId String
    x Int
    y Int 
    element Elements @relation(fields:[elementId],references:[id])
    map Map @relation(fields:[mapId],references:[id])
}

model Avatar{
    id String @id @unique @default(cuid())
    name String
    imageUrl String
    users User[]
}

enum Role{
    User
    Admin
}